version : "3.8"

services:

  front-end:
    depends_on:
      - back-end
    container_name: app
    build:
      context: ./
      dockerfile: ./docker/front-end.dockerfile
    volumes:
      - ./front-end/src:/usr/src/app/front-end/src
      - ./front-end/public:/usr/src/app/front-end/public
    ports:
      - "3000:3000"
    networks:
      - webapp
    environment:
      - NODE_ENV=development

  back-end:
    depends_on:
      - db
    container_name: api
    build:
      context: ./
      dockerfile: ./docker/back-end.dockerfile
    volumes:
      - ./back-end/src:/usr/src/app/src
      - ./front-end/src/shared/:/usr/src/app/shared
    ports:
      - "8000:8000"
    networks:
      - webapp
      - database
    environment:
      - NODE_ENV=development
    env_file:
      - ./docker/.env/.env_db

  db:
    container_name: database
    build:
      context: ./docker
      dockerfile: ./database.dockerfile
    restart: always
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - database
    env_file:
      - ./docker/.env/.env_db
    ports:
      - "5432:5432"

  adminer:
    container_name: adminer
    image: adminer
    restart: always
    ports:
      - "8080:8080"
    env_file:
      - ./docker/.env/.env_db
    networks:
      - database
volumes:
  db_data:

networks:
  webapp:
    driver: bridge
  database:
    driver: bridge